{"version":3,"sources":["Sudoku.jsx","App.js","index.js"],"names":["Square","number","color","clicked","borders","fixed","isFixed","className","Sudoku","useState","sudoku","setSudoku","changingSudoku","setChangingSudoku","numberClicked","setNumberClicked","colorClicked","setColorClicked","solveClicked","setSolveClicked","getNewSudokuClicked","setGetNewSudokuClicked","isMouseDown","setIsMouseDown","gettingSudoku","setGettingSudoku","isSolving","setIsSolving","isChecking","setIsChecking","useEffect","getSudoku","addListener","window","addEventListener","e","key","document","querySelector","click","unclickSudoku","new_sudoku","row","length","col","changeColor","new_color","i","y","changeNumber","new_number","changeMenu","item","hasBorders","column","getSolution","boards","nextEmptySpot","board","j","checkValue","value","checkRow","checkColumn","boxRow","Math","floor","boxCol","r","c","checkSquare","JSON","parse","stringify","solve","emptySpot","num","push","difficulty","fetch","then","response","json","data","onMouseDown","onMouseUp","map","handleClick","onMouseOver","handleMouseOver","onClick","handleDelete","solutionSteps","solution","console","log","handleCheck","style","visibility","timer","setInterval","clearInterval","backtracking","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa234a86.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\"\n\nconst Sudoku = () => {\n\n    const [sudoku, setSudoku] = useState([])\n    const [changingSudoku, setChangingSudoku] = useState(true)\n    const [numberClicked, setNumberClicked] = useState(true)\n    const [colorClicked, setColorClicked] = useState(false)\n    const [solveClicked, setSolveClicked] = useState(false)\n    const [getNewSudokuClicked, setGetNewSudokuClicked] = useState(false)\n    const [isMouseDown, setIsMouseDown] = useState(false)\n    const [gettingSudoku, setGettingSudoku] = useState(false)\n    const [isSolving, setIsSolving] = useState(false)\n    const [isChecking, setIsChecking] = useState(false)\n\n    useEffect(()=>{\n        getSudoku(\"easy\")\n        addListener()\n    }, [])\n\n    const addListener = () => {\n        window.addEventListener(\"keydown\", (e)=>{\n            if (sudoku === []){\n                return\n            }\n            if (e.key === \"1\"){\n                document.querySelector('.menu-1').click()\n            }else if (e.key === \"2\"){\n                document.querySelector('.menu-2').click()\n            }else if (e.key === \"3\"){\n                document.querySelector('.menu-3').click()\n            }else if (e.key === \"4\"){\n                document.querySelector('.menu-4').click()\n            }else if (e.key === \"5\"){\n                document.querySelector('.menu-5').click()\n            }else if (e.key === \"6\"){\n                document.querySelector('.menu-6').click()\n            }else if (e.key === \"7\"){\n                document.querySelector('.menu-7').click()\n            }else if (e.key === \"8\"){\n                document.querySelector('.menu-8').click()\n            }else if (e.key === \"9\"){\n                document.querySelector('.menu-9').click()\n            }else if (e.key === \"Backspace\"){\n                document.querySelector('.delete').click()\n            }\n        })\n\n    }\n\n    const handleMouseOver = (y, i) => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        let new_sudoku = sudoku\n        if (isMouseDown){\n            new_sudoku[y][i].clicked = !sudoku[y][i].clicked\n            setSudoku(new_sudoku)\n            setChangingSudoku(!changingSudoku)\n        }\n\n    }\n\n    const handleClick = (y, i) => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        let new_sudoku = sudoku\n        new_sudoku[y][i].clicked = !sudoku[y][i].clicked\n        setSudoku(new_sudoku)\n        setChangingSudoku(!changingSudoku)\n\n    }\n\n    const unclickSudoku = () => {\n        let new_sudoku = sudoku\n        for (let row = 0; row < sudoku.length; row++){\n            for (let col = 0; col < sudoku.length; col++){\n                new_sudoku[row][col].clicked = false\n            }\n        }\n        setSudoku(new_sudoku)\n        setChangingSudoku(!changingSudoku)\n    }\n    const handleCheck = () => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        setIsChecking(true)\n        unclickSudoku()\n        let solutionSteps = getSolution()\n        let solution =  JSON.parse(JSON.stringify( solutionSteps[solutionSteps.length-1] ))\n        console.log(solution, \"solution\")\n        console.log(sudoku, \"sudoku\")\n        let new_sudoku = sudoku\n        for (let i = 0; i < sudoku.length; i++){\n            for (let y = 0; y < sudoku.length; y++){\n                if (solution[i][y].number === new_sudoku[i][y].number){\n                    new_sudoku[i][y].color = \"green\"\n                }else{\n                    new_sudoku[i][y].color = \"red\"\n                }\n            }\n        }\n        setSudoku(new_sudoku)\n        setChangingSudoku(!changingSudoku)\n        setIsChecking(false)\n    }\n    const handleDelete = () => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        let new_sudoku = sudoku\n        for (let i = 0; i < new_sudoku.length; i++){\n            for (let y = 0; y < new_sudoku[i].length; y++){\n                if (new_sudoku[i][y].clicked){\n                    if (!new_sudoku[i][y].fixed){\n                        new_sudoku[i][y].number = false\n                    }\n                    new_sudoku[i][y].color = \"white\"\n                }\n            }\n        }\n        unclickSudoku()\n        setSudoku(new_sudoku)\n    }\n\n    const changeColor = (new_color) => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        let new_sudoku = sudoku\n        for (let i = 0; i < new_sudoku.length; i++){\n            for (let y = 0; y < new_sudoku[i].length; y++){\n                if (new_sudoku[i][y].clicked){\n                    new_sudoku[i][y].color = new_color\n                }\n            }\n        }\n        unclickSudoku()\n        setSudoku(new_sudoku)\n    }\n    const changeNumber = (new_number) => {\n        if (gettingSudoku || isSolving|| isChecking){\n            return\n        }\n        let new_sudoku = sudoku\n        for (let i = 0; i < new_sudoku.length; i++){\n            for (let y = 0; y < new_sudoku[i].length; y++){\n                if (sudoku[i][y].fixed){\n                    continue\n                }\n                if (new_sudoku[i][y].clicked){\n                    new_sudoku[i][y].number = new_number\n                }\n            }\n        }\n        unclickSudoku()\n        setSudoku(new_sudoku)\n        setChangingSudoku(!changingSudoku)\n    }\n    const changeMenu = (item) => {\n        if (item === \"number\"){\n            setNumberClicked(true)\n            setColorClicked(false)\n            setSolveClicked(false)\n            setGetNewSudokuClicked(false)\n        }\n        if (item === \"color\"){\n            setColorClicked(true)\n            setNumberClicked(false)\n            setSolveClicked(false)\n            setGetNewSudokuClicked(false)\n        }\n        if (item === \"solve\"){\n            setSolveClicked(true)\n            setColorClicked(false)\n            setNumberClicked(false)\n            setGetNewSudokuClicked(false)\n        }\n        if (item === \"sudoku\"){\n            setGetNewSudokuClicked(true)\n            setSolveClicked(false)\n            setColorClicked(false)\n            setNumberClicked(false)\n        }\n    }\n    const hasBorders = (row, column) => {\n        let borders = \"\"\n        if (row === 2 || row === 5 || row === 8){\n            borders += \"big-border-bottom \"\n        }\n        if (row === 0 || row === 3 || row === 6){\n            borders += \"big-border-top \"\n        }\n        if (column === 2 || column === 5 || column === 8){\n            borders += \"big-border-right \"\n        }\n        if (column === 0 || column === 3 || column === 6){\n            borders += \"big-border-left \"\n        }\n        return borders\n    }\n\n    const backtracking = () => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        setIsSolving(true)\n        let solutionSteps = getSolution()\n        console.log(solutionSteps[solutionSteps.length-1])\n        let i = 0\n        var timer = setInterval(()=>{\n            if (i >= solutionSteps.length){\n                setIsSolving(false)\n                clearInterval(timer)\n            }else{\n                setSudoku(solutionSteps[i])\n                setChangingSudoku(!changingSudoku)\n            }\n            i++\n        },10)\n        \n    }\n   const getSolution = () => {\n       let boards = []\n        const nextEmptySpot = (board) => {\n            for (var i = 0; i < 9; i++) {\n                for (var j = 0; j < 9; j++) {\n                    if (board[i][j].number === false) \n                        return [i, j];\n                    }\n            }\n            return [-1, -1];\n        }\n        const checkRow = (board, row, value) => {\n            for(var i = 0; i < board[row].length; i++) {\n                if(board[row][i].number === value) {\n                    return false;\n                }\n            }\n        \n            return true;\n        }\n        const checkColumn = (board, column, value) => {\n            for(var i = 0; i < board.length; i++) {\n                if(board[i][column].number === value) {\n                    return false;\n                }\n            }\n        \n            return true;\n        };\n\n        const checkSquare = (board, row, column, value) => {\n            let boxRow = Math.floor(row / 3) * 3;\n            let boxCol = Math.floor(column / 3) * 3;\n            \n            for (var r = 0; r < 3; r++){\n                for (var c = 0; c < 3; c++){\n                    if (board[boxRow + r][boxCol + c].number === value)\n                        return false;\n                }\n            }\n\n        return true;\n    };\n\n        const  checkValue = (board, row, column, value) => {\n            if(checkRow(board, row, value) &&\n            checkColumn(board, column, value) &&\n            checkSquare(board, row, column, value)) {\n                return true;\n            }\n            \n            return false; \n        };\n\n        const solve = (board) => { \n                let emptySpot = nextEmptySpot(board);\n                let row = emptySpot[0];\n                let col = emptySpot[1];\n            \n                if (row === -1){\n                    return board;\n                }\n                for(let num = 1; num<=9; num++){\n                    if (checkValue(board, row, col, num)){\n                        board[row][col].number = num;\n                        boards.push(JSON.parse(JSON.stringify( board )))\n                        solve(board);\n                    }\n                }\n            \n                if (nextEmptySpot(board)[0] !== -1)\n                    board[row][col].number = false;\n                    boards.push(JSON.parse(JSON.stringify( board )))\n                return board;\n            }\n        let new_sudoku = JSON.parse(JSON.stringify( sudoku ))\n        for (let i = 0; i < sudoku.length; i++){\n            for (let y = 0; y < sudoku.length; y++){\n                if (new_sudoku[i][y].fixed === false){\n                     new_sudoku[i][y].number = false\n                }\n                \n            }\n        }\n        solve(JSON.parse(JSON.stringify( new_sudoku )))\n        return boards\n    }\n\n    const getSudoku = (difficulty) => {\n        if (gettingSudoku || isSolving || isChecking){\n            return\n        }\n        setGettingSudoku(true)\n        let new_sudoku = []\n        fetch(`https://sugoku.herokuapp.com/board?difficulty=${difficulty}`)\n            .then(response => response.json())\n            .then(data => {\n                for (let i = 0; i < 9; i++){\n                    let row = []\n                    for (let y = 0; y < 9; y++){\n                        if (data.board[y][i]){\n                            row.push({number: data.board[y][i], clicked: false, color: \"white\", fixed: true})\n                        }else{\n                            row.push({number: false, clicked: false, color: \"white\", fixed: false})\n                        }\n                    }\n                    new_sudoku.push(row)\n                }\n                setSudoku(new_sudoku)\n                setGettingSudoku(false)\n            });\n    }\n    return ( \n        <div>\n             <div className=\"sudoku-grid\" onMouseDown={() => setIsMouseDown(true)} onMouseUp={() => setIsMouseDown(false)}>\n                {sudoku.map((row, y) => row.map((e, i) => <div key={`${y}/${i}`} onMouseDown={()=>{handleClick(y,i)}} onMouseOver={()=>{handleMouseOver(y,i)}}><Square color={sudoku[y][i].color} number={sudoku[y][i].number} clicked={sudoku[y][i].clicked} borders={hasBorders(y,i)} isFixed={sudoku[y][i].fixed}/></div>))}\n            </div>\n            <div className=\"menu-grid\">\n                {numberClicked && <div className=\"number-clicked\">Number</div> || <div className=\"number\" onClick={()=>{changeMenu(\"number\")}}>Number</div>}\n                {colorClicked && <div className=\"color-clicked\">Color</div> || <div className=\"color\" onClick={()=>{changeMenu(\"color\")}}>Color</div>}\n                {solveClicked && <div className=\"solve-clicked\">Solve</div> || <div className=\"solve\" onClick={()=>{changeMenu(\"solve\")}}>Solve</div>}\n                {getNewSudokuClicked && <div className=\"get-sudoku-clicked\">New Sudoku</div> || <div className=\"get-sudoku\" onClick={()=>{changeMenu(\"sudoku\")}}>New Sudoku</div>}\n                {<div className=\"delete\" onClick={()=>{handleDelete()}}>Delete</div>}\n                {<div className=\"check\" onClick={()=>{handleCheck()}}>Check</div>}\n\n                {colorClicked && <div className=\"menu-black\" onClick={()=>changeColor(\"black\")}></div>}\n                {colorClicked && <div className=\"menu-gray\" onClick={()=>changeColor(\"grey\")}></div>}\n                {colorClicked && <div className=\"menu-white\" onClick={()=>changeColor(\"white\")}></div>}\n                {colorClicked && <div className=\"menu-green\" onClick={()=>changeColor(\"green\")}></div>}\n                {colorClicked && <div className=\"menu-pink\" onClick={()=>changeColor(\"pink\")}></div>}\n                {colorClicked && <div className=\"menu-orange\" onClick={()=>changeColor(\"orange\")}></div>}\n                {colorClicked && <div className=\"menu-red\" onClick={()=>changeColor(\"red\")}></div>}\n                {colorClicked && <div className=\"menu-yellow\" onClick={()=>changeColor(\"yellow\")}></div>}\n                {colorClicked && <div className=\"menu-blue\" onClick={()=>changeColor(\"blue\")}></div>}\n\n                {numberClicked && <div className=\"menu-1\" onClick={()=>changeNumber(1)}>1</div> || <div className=\"menu-1\" onClick={()=>changeNumber(1)} style={{visibility: \"hidden\"}}>1</div>}\n                {numberClicked && <div className=\"menu-2\" onClick={()=>changeNumber(2)}>2</div> || <div className=\"menu-2\" onClick={()=>changeNumber(2)} style={{visibility: \"hidden\"}}>2</div>}\n                {numberClicked && <div className=\"menu-3\" onClick={()=>changeNumber(3)}>3</div> || <div className=\"menu-3\" onClick={()=>changeNumber(3)} style={{visibility: \"hidden\"}}>3</div>}\n                {numberClicked && <div className=\"menu-4\" onClick={()=>changeNumber(4)}>4</div> || <div className=\"menu-4\" onClick={()=>changeNumber(4)} style={{visibility: \"hidden\"}}>4</div>}\n                {numberClicked && <div className=\"menu-5\" onClick={()=>changeNumber(5)}>5</div> || <div className=\"menu-5\" onClick={()=>changeNumber(5)} style={{visibility: \"hidden\"}}>5</div>}\n                {numberClicked && <div className=\"menu-6\" onClick={()=>changeNumber(6)}>6</div> || <div className=\"menu-6\" onClick={()=>changeNumber(6)} style={{visibility: \"hidden\"}}>6</div>}\n                {numberClicked && <div className=\"menu-7\" onClick={()=>changeNumber(7)}>7</div> || <div className=\"menu-7\" onClick={()=>changeNumber(7)} style={{visibility: \"hidden\"}}>7</div>}\n                {numberClicked && <div className=\"menu-8\" onClick={()=>changeNumber(8)}>8</div> || <div className=\"menu-8\" onClick={()=>changeNumber(8)} style={{visibility: \"hidden\"}}>8</div>}\n                {numberClicked && <div className=\"menu-9\" onClick={()=>changeNumber(9)}>9</div> || <div className=\"menu-9\" onClick={()=>changeNumber(9)} style={{visibility: \"hidden\"}}>9</div>}\n\n                {solveClicked && <div className=\"menu-backtracking\" onClick={()=>{backtracking()}}>Backtracking</div>}\n\n                {getNewSudokuClicked && <div className=\"menu-easy\" onClick={()=> getSudoku(\"easy\")}>Easy</div>}\n                {getNewSudokuClicked && <div className=\"menu-medium\" onClick={()=> getSudoku(\"medium\")}>Medium</div>}\n                {getNewSudokuClicked && <div className=\"menu-hard\" onClick={()=> getSudoku(\"hard\")}>Hard</div>}\n\n            </div>\n        </div>\n    )\n}\nconst Square = ({ number, color, clicked, borders, isFixed}) => {\n    var fixed = \"\"\n    if (isFixed){\n        fixed = \"fixed\"\n    }else{\n        fixed = \"not-fixed\"\n    }\n    if (clicked){\n        return (\n            <div className={`square clicked ${color} ${borders} ${fixed}`}>\n                {number}\n            </div> \n        )\n    }\n    return (\n        <div className={`square ${color} ${borders} ${fixed}`}>\n            {number}\n        </div> \n    )\n}\nexport default Sudoku;","import Sudoku from './Sudoku';\n\nfunction App() {\n  return (\n    <Sudoku/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}